# Generated by Django 5.2.7 on 2025-10-18 20:57

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PetProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Pet's name", max_length=100)),
                ('species', models.CharField(choices=[('Dog', 'Dog'), ('Cat', 'Cat'), ('Bird', 'Bird'), ('Rabbit', 'Rabbit'), ('Hamster', 'Hamster'), ('Guinea Pig', 'Guinea Pig'), ('Reptile', 'Reptile'), ('Fish', 'Fish'), ('Other', 'Other')], default='Other', help_text='Type of animal', max_length=100)),
                ('breed', models.CharField(blank=True, help_text='Breed (optional)', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Unknown', 'Unknown')], default='Unknown', help_text="Pet's gender", max_length=10)),
                ('date_of_birth', models.DateField(blank=True, help_text="Pet's date of birth", null=True)),
                ('age', models.PositiveIntegerField(blank=True, help_text='Age in years (if date of birth is unknown)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kilograms', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('color', models.CharField(blank=True, help_text="Pet's color/markings", max_length=100)),
                ('microchip_number', models.CharField(blank=True, help_text='Microchip identification number', max_length=50, null=True, unique=True)),
                ('allergies', models.TextField(blank=True, help_text='Known allergies')),
                ('medical_conditions', models.TextField(blank=True, help_text='Existing medical conditions')),
                ('current_medications', models.TextField(blank=True, help_text='Current medications')),
                ('profile_image', models.ImageField(blank=True, help_text="Pet's photo", null=True, upload_to='pets/profiles/%Y/%m/')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the pet')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this pet is still under care')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='Pet owner', limit_choices_to={'role': 'CLIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='pets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pet Profile',
                'verbose_name_plural': 'Pet Profiles',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['owner', 'is_active'], name='pets_petpro_owner_i_d4a79b_idx'), models.Index(fields=['species'], name='pets_petpro_species_f23c22_idx'), models.Index(fields=['microchip_number'], name='pets_petpro_microch_5e1ef5_idx')],
            },
        ),
    ]
